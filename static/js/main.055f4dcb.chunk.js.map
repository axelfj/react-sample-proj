{"version":3,"sources":["routes/privateRoutes.tsx","components/dashboard.tsx","components/details.tsx","components/home.tsx","models/session.ts","contexts/sessionContext.tsx","components/login.tsx","components/shared/navbar.tsx","components/profile.tsx","components/register.tsx","routes/routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProtectedRoute","isAuthenticated","authenticationPath","routeProps","children","component","to","pathname","Dashboard","Details","Home","useState","cat","setCat","React","setLoading","className","onClick","axios","get","then","response","data","url","catch","ex","isCancel","code","status","src","initialSession","redirectPath","SessionContext","createContext","session","SessionContextProvider","props","defaultSessionContext","Provider","value","Login","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useContext","setSessionContext","history","useHistory","classes","formik","useFormik","initialValues","username","password","onSubmit","values","fromStorage","localStorage","getItem","indexOf","user","JSON","parse","alert","setItem","push","err","Container","maxWidth","CssBaseline","Avatar","noValidate","handleSubmit","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","handleChange","type","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","Box","mt","createStyles","root","flexGrow","menuButton","marginRight","title","ButtonAppBar","sessionContext","items","route","navItem","AppBar","position","Toolbar","IconButton","edge","aria-label","filter","map","setRoute","Profile","Register","firstname","lastname","newUsers","console","log","includes","stringify","Routes","authRoutes","defaultProtectedRouteProps","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.055f4dcb.chunk.js","sourcesContent":["import { Redirect, Route, RouteProps } from \"react-router\";\r\n\r\nexport type ProtectedRouteProps = {\r\n  isAuthenticated: boolean;\r\n  authenticationPath: string;\r\n} & RouteProps;\r\n\r\nconst ProtectedRoute = ({\r\n  isAuthenticated,\r\n  authenticationPath,\r\n  ...routeProps\r\n}: ProtectedRouteProps) => {\r\n  if (isAuthenticated) {\r\n    return <Route {...routeProps} children={routeProps.component} />;\r\n  } else {\r\n    return <Redirect to={{ pathname: authenticationPath }} />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  return <h1>Dash</h1>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nconst Details = () => {\r\n  return <h1>Details</h1>;\r\n};\r\n\r\nexport default Details;\r\n","import { Link, Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { Nav, NavDropdown, NavItem, Navbar } from \"react-bootstrap\";\r\nimport React, { CSSProperties, useEffect, useState } from \"react\";\r\nimport axios, { CancelTokenSource } from \"axios\";\r\n\r\ninterface ICat {\r\n  config: string[];\r\n  height: number;\r\n  id: string;\r\n  url: string;\r\n  width: number;\r\n}\r\n\r\nconst Home = () => {\r\n  const [cat, setCat] = useState<ICat>();\r\n\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n\r\n  const updateImage = () => {\r\n    axios\r\n      .get<any>(\"https://api.thecatapi.com/v1/images/search\", {})\r\n      .then((response) => {\r\n        setCat(response.data[0].url);\r\n        setLoading(false);\r\n      })\r\n      .catch((ex) => {\r\n        let error = axios.isCancel(ex)\r\n          ? \"Request Cancelled\"\r\n          : ex.code === \"ECONNABORTED\"\r\n          ? \"A timeout has occurred\"\r\n          : ex.response.status === 404\r\n          ? \"Resource Not Found\"\r\n          : \"An unexpected error has occurred\";\r\n\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <h1>Welcome to the real reactivation!</h1>\r\n        <h2>Check a cat..</h2>\r\n        <button onClick={() => updateImage()}>Load another cat...</button>\r\n        <div>\r\n          <img src={`${cat}`} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export type Session = {\r\n  isAuthenticated: boolean;\r\n  redirectPath: string;\r\n}\r\n\r\nexport const initialSession: Session = {\r\n  isAuthenticated: false,\r\n  redirectPath: \"\"\r\n};","import { Session, initialSession } from \"../models/session\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nexport const SessionContext = createContext<\r\n  [Session, (session: Session) => void]\r\n>([initialSession, (session: Session) => {}]);\r\n\r\nexport const SessionContextProvider: React.FC = (props) => {\r\n  const [sessionState, setSessionState] = useState(initialSession);\r\n\r\n  const defaultSessionContext: [Session, typeof setSessionState] = [\r\n    sessionState,\r\n    setSessionState,\r\n  ];\r\n\r\n  return (\r\n    <SessionContext.Provider value={defaultSessionContext}>\r\n      {props.children}\r\n    </SessionContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport {\r\n  SessionContext,\r\n  SessionContextProvider,\r\n} from \"../contexts/sessionContext\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Login = () => {\r\n  const Copyright = () => (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Dazen\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  const [sessionContext, setSessionContext] = useContext(SessionContext);\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      try {\r\n        const fromStorage = localStorage.getItem(\"users\");\r\n\r\n        if (fromStorage && fromStorage.indexOf(values.username)) {\r\n          const parsedStorage = JSON.parse(fromStorage);\r\n          const user = parsedStorage[values.username];\r\n          if (\r\n            user.username === values.username &&\r\n            user.password === values.password\r\n          ) {\r\n            alert(\"Logged!\");\r\n            setSessionContext({\r\n              isAuthenticated: true,\r\n              redirectPath: \"/Dashboard\",\r\n            });\r\n            localStorage.setItem(\"user\", JSON.parse(values.username));\r\n            history.push(\"/Dashboard\");\r\n          } else if (user.password !== values.password) {\r\n            alert(\"Wrong password.\");\r\n          }\r\n        } else {\r\n          alert(\"That user doesn't exists.\");\r\n        }\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}></Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log into reactive!\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={formik.handleChange}\r\n            value={formik.values.username}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/Register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { SessionContext } from \"../../contexts/sessionContext\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n  const [sessionContext, setSessionContext] = useContext(SessionContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const setRoute = (route: string) => {\r\n    history.push(route);\r\n  };\r\n\r\n  const items = [\r\n    { route: \"/\", navItem: \"Home\", display: !sessionContext.isAuthenticated },\r\n    {\r\n      route: \"/Login\",\r\n      navItem: \"Login\",\r\n      display: !sessionContext.isAuthenticated,\r\n    },\r\n    {\r\n      route: \"/Register\",\r\n      navItem: \"Register\",\r\n      display: !sessionContext.isAuthenticated,\r\n    },\r\n    {\r\n      route: \"/Dashboard\",\r\n      navItem: \"Dashboard\",\r\n      display: sessionContext.isAuthenticated,\r\n    },\r\n    {\r\n      route: \"/Profile\",\r\n      navItem: \"Profile\",\r\n      display: sessionContext.isAuthenticated,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          ></IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Reactivation\r\n          </Typography>\r\n          {items\r\n            .filter(({ display }) => display)\r\n            .map(({ route, navItem }) => (\r\n              <Button color=\"inherit\" onClick={() => setRoute(route)}>\r\n                {navItem}\r\n              </Button>\r\n            ))}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <Link to=\"/Profile/Details\">Details</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { copyFileSync } from \"node:fs\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://soundcloud.com/dazencr\">\r\n        DAZEN\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      const fromStorage = localStorage.getItem(\"users\");\r\n      let newUsers = {};\r\n      console.log();\r\n      if (fromStorage?.includes(values.username)) {\r\n        alert(\"The username is already taken.\");\r\n      } else {\r\n        if (fromStorage) {\r\n          newUsers = {\r\n            ...JSON.parse(fromStorage),\r\n            [values.username]: values,\r\n          };\r\n        } else {\r\n          newUsers = {\r\n            [values.username]: values,\r\n          };\r\n        }\r\n        localStorage.setItem(\"users\", JSON.stringify(newUsers));\r\n        alert(\"User registered!\");\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}></Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register into reactive!\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"firstname\"\r\n              label=\"Firstname\"\r\n              name=\"firstname\"\r\n              autoComplete=\"firstname\"\r\n              autoFocus\r\n              onChange={formik.handleChange}\r\n              value={formik.values.firstname}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"lastname\"\r\n              label=\"Lastname\"\r\n              name=\"lastname\"\r\n              autoComplete=\"lastname\"\r\n              autoFocus\r\n              onChange={formik.handleChange}\r\n              value={formik.values.lastname}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Register\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import ProtectedRoute, { ProtectedRouteProps } from \"./privateRoutes\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nimport Bootstrap from \"react-bootstrap\";\r\nimport Dashboard from \"../components/dashboard\";\r\nimport Details from \"../components/details\";\r\nimport Home from \"../components/home\";\r\nimport Login from \"../components/login\";\r\nimport Navbar from \"../components/shared/navbar\";\r\nimport Profile from \"../components/profile\";\r\nimport Register from \"../components/register\";\r\nimport { SessionContext } from \"../contexts/sessionContext\";\r\n\r\nconst Routes = () => {\r\n  const [sessionContext] = useContext(SessionContext);\r\n\r\n  const authRoutes: ProtectedRouteProps = {\r\n    isAuthenticated: !sessionContext.isAuthenticated,\r\n    authenticationPath: sessionContext.redirectPath,\r\n  };\r\n\r\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\r\n    isAuthenticated: sessionContext.isAuthenticated,\r\n    authenticationPath: sessionContext.redirectPath,\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        {/* If the current URL is /about, this route is rendered\r\n            while the rest are ignored */}\r\n        <ProtectedRoute\r\n          {...defaultProtectedRouteProps}\r\n          path=\"/dashboard\"\r\n          component={Dashboard}\r\n        />\r\n\r\n        {/* Note how these two routes are ordered. The more specific\r\n            path=\"/contact/:id\" comes before path=\"/contact\" so that\r\n            route will render when viewing an individual contact */}\r\n        <ProtectedRoute\r\n          {...defaultProtectedRouteProps}\r\n          path=\"/profile/details\"\r\n          component={Details}\r\n        />\r\n        <ProtectedRoute\r\n          {...defaultProtectedRouteProps}\r\n          path=\"/profile\"\r\n          component={Profile}\r\n        />\r\n\r\n        {/* If none of the previous routes render anything,\r\n            this route acts as a fallback.\r\n\r\n            Important: A route with path=\"/\" will *always* match\r\n            the URL because all URLs begin with a /. So that's\r\n            why we put this one last of all */}\r\n\r\n        <Route {...authRoutes} path=\"/login\" component={Login} />\r\n\r\n        <Route {...authRoutes} path=\"/register\" component={Register} />\r\n\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import ProtectedRoute, { ProtectedRouteProps } from \"./routes/privateRoutes\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport Routes from \"./routes/routes\";\r\nimport { SessionContextProvider } from \"./contexts/sessionContext\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <SessionContextProvider>\r\n      <Routes />\r\n    </SessionContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}